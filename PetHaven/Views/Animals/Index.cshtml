@model PetHaven.ViewModels.AnimalIndexViewModel
@using PagedList.Mvc

@{
    ViewBag.Title = "Animals";
}
<br />
<br />


<h2>@ViewBag.Title</h2>
<p>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " + Model.Search + " found")  @Model.Animals.TotalItemCount animals
</p>

<p>
    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {
        @Html.ActionLink("Create New", "Create")
    }
    @using (Html.BeginRouteForm("AnimalsIndex", FormMethod.Get))
    {
        <label>Filter by category:</label>
        @Html.DropDownListFor(vm => vm.Category, Model.CatFilterItems, "All", new { @class = "custom-select" });
        <label>Sort by:</label>
        @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default", new { @class = "custom-select" })
        <input type="submit" value="Filter" class="btn btn-primary" />
        <input type="hidden" name="Search" id="Search" value="@Model.Search" />
    }
</p>
<table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Animals.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Animals.First().Description)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Animals)
    {
        <tr>
            <td>
                @if (item.AnimalImageMappings != null && item.AnimalImageMappings.Any())
                {
                    <a href="@Url.Action("Details", new { id = item.ID})">
                        <img src="@(Url.Content(Constants.AnimalImagePath) + item.AnimalImageMappings.OrderBy(pim => pim.ImageNumber).ElementAt(0).AnimalImage.FileName)">
                    </a>
                }
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID })
                    @Html.Raw(" | ")
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                }
            </td>
        </tr>
    }

</table>
<div class="pagination pagination-sm">
    @Html.PagedListPager(Model.Animals, page => Url.Action("Index", new { category = @Model.Category, Search = @Model.Search, sortBy = @Model.SortBy, page }))
</div>